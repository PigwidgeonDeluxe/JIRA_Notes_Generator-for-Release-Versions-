<html>

<head>
    <script src="jquery.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="ejs.js"></script>
    <link rel="stylesheet" href="jquery-ui.min.css">
    <script src="jquery.js"></script>
    <script src="jquery-ui.min.js"></script>
    <link href="tabulator.css" rel="stylesheet">
    <script type="text/javascript" src="tabulator.js"></script>
    <link rel="stylesheet" type="text/css" href="globalstyle.css">
</head>


<!--Tabulator tables-->
<div id="main-table-div"></div>

<script type="text/javascript">
    //run script once the document is fully loaded
    $(document).ready(function() {
        var table_data = <%- JSON.stringify(release_data) %>
        var release_versions = <%- JSON.stringify(releases) %>
        var releaseamount = release_versions.length;
        if (releaseamount == 0){
            $('#main-table-div').append("<center>No Epics were found.</center>");
        } else {
            //create the html tables (divs)
            //define some data from sent json data from nodejs server
            var formatted_release_versions = [];
            var content = "<table>";

            //define Tabulator, specify columns, behaviour, etc
            var table_columns = {
                fitColumns:false,
                colMinWidth:80,
                groupBy:"component",
                columns: [ //Define Table Columns //Define columns as percentages to allow for dynamic resizing based on window size 
                    {
                        title: "ID",
                        field: "ch_id",
                        sorter: "string",
                        align: "center",
                        formatter: "textarea",
                        width: "10%"
                    }, {
                        title: "RFC Name",
                        field: "rfc_name",
                        sorter: "string",
                        align: "center",
                        formatter: "textarea",
                        width: "34%"
                    }, {
                        title: "State",
                        field: "state",
                        sorter: "string",
                        align: "center",
                        formatter: "textarea",
                        width: "12%",
                        //set the colours for different priorities
                        formatter:function(value, data){
                            if(value == "Requested"){//bright gold
                                return "<span style='color:#FDD017; font-weight:bold;'>" + value + "</span>";
                            }
                            else if(value == "Declined"){
                                return "<span style='color:red; font-weight:bold;'>" + value + "</span>";
                            }
                            else if(value == "Approved"){//green apple
                                return "<span style='color:#4CC417; font-weight:bold;'>" + value + "</span>";
                            }
                            else if(value == "Backlog"){
                                return "<span style='color:orange; font-weight:bold;'>" + value + "</span>";
                            }
                            else if(value == "Development"){
                                return "<span style='color:blue; font-weight:bold;'>" + value + "</span>";
                            }
                            else if(value == "QA"){
                                return "<span style='color:purple; font-weight:bold;'>" + value + "</span>";
                            }
                            else if(value == "Ready for Release"){//pine green
                                return "<span style='color:#387C44; font-weight:bold;'>" + value + "</span>";
                            }
                            else if(value == "Implemented"){//hazel green
                                return "<span style='color:#617C58; font-weight:bold;'>" + value + "</span>";
                            }
                            else{
                                return value;
                            }
                        }
                    }, {
                        title: "Priority",
                        field: "priority",
                        sorter: "string",
                        align: "center",
                        formatter: "textarea",
                        width: "10%",
                        //set the colours for different priorities
                        formatter:function(value, data){
                            if(value == "Highest"){
                                return "<span style='color:red; font-weight:bold;'>" + value + "</span>";
                            }
                            else if(value == "High"){
                                return "<span style='color:#E55451; font-weight:bold;'>" + value + "</span>";
                            }
                            else if(value == "Medium"){
                                return "<span style='color:orange; font-weight:bold;'>" + value + "</span>";
                            }
                            else if(value == "Low"){
                                return "<span style='color:green; font-weight:bold;'>" + value + "</span>";
                            }
                            else if(value == "Lowest"){
                                return "<span style='color:#6CBB3C; font-weight:bold;'>" + value + "</span>";
                            }
                            else{
                                return value;
                            }
                        }
                    }, {
                        title: "ImpDate",
                        field: "impdate",
                        sorter: "string",
                        align: "center",
                        formatter: "textarea",
                        width: "10%"
                    }, {
                        title: "Assignee",
                        field: "assignee",
                        sorter: "string",
                        align: "center",
                        formatter: "textarea",
                        width: "12%"
                    }, {
                        title: "Component",
                        field: "component",
                        sorter: "string",
                        align: "center",
                        formatter: "textarea",
                        width: "12%"
                    },
                ],
                rowClick: function(e, id, data, row) { //open the issue for the row when the row is clicked
                    var data_chid =  data["ch_id"].replace(/[<b>]|[</b>]/g, "");
                    window.open("https://ondhdp.atlassian.net/projects/" + data_chid.split("-")[0] + "/issues/" + data_chid);

                },
            };

            //remove spaces and periods
            for (i = 0; i < releaseamount; i++){
                formatted_release_versions.push(release_versions[i]["key"].replace(/[ .]/g, "-" ));
            }

            //populate and create the column cells/data
            for (j = 0; j < releaseamount; j++) { //loop by row
                content += "<h1 id='table_header'>" + release_versions[j]["key"] + " : " + release_versions[j]["summary"] + "</h1>"
                content += "<div id='main-table-" + formatted_release_versions[j] + "'" + ">" + "</div>";
                
            }
            content += "</table>"

            console.log(content)
            //add the table to the divs created before
            $('#main-table-div').append(content)
            //console.log("RV" + release_versions.length)
            for (k = 0; k < releaseamount; k++){
                //initialize the table
                $("#main-table-" + formatted_release_versions[k]).tabulator(table_columns);
                //load data into the table for current div 
                $("#main-table-" + formatted_release_versions[k]).tabulator("setData", table_data[release_versions[k]["key"]]);

                //console.log("#main-table-" + formatted_release_versions[k] + table_data[release_versions[k]])
            }
        }


        
    });
</script>

</html>